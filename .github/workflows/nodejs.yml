name: Build and publish Node.js package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        feature: [core, js]
        os: [macos-11.0, ubuntu-18.04, windows-2019]
    steps:
      - uses: actions/checkout@v1

      - name: Get version
        id: version
        shell: bash
        run: echo ::set-output name=VERSION::"$([[ "$GITHUB_REF" == refs/tags/v* ]] && echo ${GITHUB_REF#refs/tags/v} || echo '0.0.0')"

      - name: Set up Node.js
        if: runner.name != 'macos-arm64'
        uses: actions/setup-node@master
        with:
          node-version: 17.x

      - name: Set up Rust
        if: runner.name != 'macos-arm64'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true

      - name: Set up GCC (Windows)
        if: runner.os == 'Windows'
        run: .\.github\workflows\gcc.ps1

      - name: Set up Go
        if: runner.name != 'macos-arm64'
        uses: actions/setup-go@v2
        with:
          go-version: '^1.14.0'

      - name: Run prebuild steps
        shell: bash
        run: bash ./prebuild.sh

      - name: Build native module
        working-directory: ./nodejs
        id: module
        shell: bash
        run: |
          node package.json.gen.js ${{ matrix.feature }}
          npm install
          npm run build
          node compress.js
          node rename.js
          echo ::set-output name=BINARY_NAME::"$(node -e 'console.log([process.platform, process.arch].join("__"))')"

      - name: Upload to workflow
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.feature }}__${{ steps.module.outputs.BINARY_NAME }}.node.gz
          path: ${{ github.workspace }}/nodejs/${{ steps.module.outputs.BINARY_NAME }}.node.gz
  package:
    strategy:
      matrix:
        feature: [core, js]
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v1
      - name: Get version
        id: version
        shell: bash
        run: echo ::set-output name=VERSION::"$([[ "$GITHUB_REF" == refs/tags/v* ]] && echo ${GITHUB_REF#refs/tags/v} || echo '0.0.0')"

      - uses: actions/download-artifact@v3

      - name: Display structure of download files
        run: ls -R

      - name: Copy Artifacts
        run: |
          mkdir nodejs/binaries
          cp -r ${{ matrix.feature }}__*.node.gz/* ./nodejs/binaries

      - name: Set up Node.js
        uses: actions/setup-node@master
        with:
          node-version: 17.x
      - name: Pack and publish package
        working-directory: ./nodejs
        run: |
          cat << 'EOF' > .npmrc
          package-lock=false
          //registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}
          EOF
          cp ../README.md .
          node package.json.gen.js ${{ matrix.feature }}
          sed -i -e 's/"node-gyp": "\^7.0.0",//g' package.json
          sed -i -e 's/"build": "node-gyp build && shx mv build\/Release\/index\.node index\.node",//g' package.json
          sed -i -e 's/"clean": "cd native && cargo clean && cd .. && node-gyp clean && node-gyp configure && shx rm -f index.node",//g' package.json
          cat package.json
          if [[ "${{ steps.version.outputs.VERSION }}" != "0.0.0" ]]; then
            npm publish --access public
          fi
